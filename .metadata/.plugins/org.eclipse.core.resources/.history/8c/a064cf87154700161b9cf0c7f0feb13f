package source;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class PatternCreate {

	public static void main(String[] args) throws IOException {
		
		/*System.out.print("Input pattern: ");
		Scanner keyboard = new Scanner(System.in);
		String pattern = keyboard.next();*/
		
		BufferedReader reader = new BufferedReader(new FileReader("TaleOfTwoCities_FORMAT.txt"));
		String line = "";
		//int constWordLength = 8;
		int[] wordCount = new int[20];
		
		Map<String, Double> patternHolder = new HashMap<String, Double>();
		ArrayList<String> patterns = new ArrayList<String>();
		
		DecimalFormat df = new DecimalFormat("#.####");
		df.setRoundingMode(RoundingMode.CEILING);
		
		while((line = reader.readLine()) != null)
		{
			for(String word : line.split(" "))
			{
				if(!word.equals(""))// && word.length() <= constWordLength)
				{
					String pattern = ContactLetter_CVPatterns.getPattern(word);
					
					if(patternHolder.containsKey(pattern))
					{
						patternHolder.put(pattern, patternHolder.get(pattern) + 1.0);
					}
					else
					{
						patterns.add(pattern);
						patternHolder.put(pattern, 1.0);
					}
					
					++wordCount[pattern.length() - 1];
				}
			}
		}
		
		reader.close();
		
		BufferedWriter writer = new BufferedWriter(new FileWriter("patterns_book.txt"));
		
		for(int i = 0; i < patterns.size(); ++i)
		{
			for(int j = 0; j < patterns.size(); ++j)
			{
				if(patterns.get(j).length() == i + 1)
				{
					writer.write(patterns.get(j) + " " + df.format(patternHolder.get(patterns.get(j)) / wordCount[patterns.get(j).length() - 1] * 100));
					writer.newLine();
				}
			}
			//writer.newLine();
		}
		
		writer.close();
	
		System.out.println("Finished");
		
	}

}
